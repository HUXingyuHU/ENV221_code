?xml2
help(xml2)
??xml2
a <- read_xml(help(plot, package = "base"))
?read_xml
a <- help(plot, package = "base")
xml_data <- read_xml(a)
help(help)
a <- help(plot, package = "base", help_type = "html")
xml_data <- read_xml(a)
help(help)
help(help)
a <- help(plot, package = "base", help_type = "pdf")
xml_data <- read_xml(a)
a
a <- help(plot, package = "base", help_type = "pdf")
a <- help(plot, package = "base", help_type = "text")
a
xml_data <- read_text(a)
xml_data <- read_txt(a)
b <- readLines(a)
??beginr
extract_help <- function(pkg, fn = NULL, to = c("txt", "html", "latex", "ex")){
to <- match.arg(to)
rdbfile <- file.path(find.package(pkg), "help", pkg)
rdb <- tools:::fetchRdDB(rdbfile, key = fn)
convertor <- switch(to,
txt   = tools::Rd2txt,
html  = tools::Rd2HTML,
latex = tools::Rd2latex,
ex    = tools::Rd2ex
)
f <- function(x) capture.output(convertor(x))
if(is.null(fn)) lapply(rdb, f) else f(rdb)
}
extrac_help(plot)
extract_help(plot)
extract_help("plot")
extract_help("base", "plot")
extract_help("base", "plot", "html")
extract_help("base", "hist", "html")
extract_help(hist", "html")
extract_help("hist", "html")
?hist
extract_help("graphics", "hist", "html")
extract_help("graphics", "hist")
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
airquality
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[Month == 6, 1])
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[airquality$Month == 6, 1])
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[airquality$Month == 5, 1])
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[airquality$Month == 6, 1], na.omit = TRUE)
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[airquality$Month == 6, 1])
boxplot(airquality[airquality$Month == 6, 1], na.omit = TRUE)
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[airquality$Month == 6, 1])
boxplot(airquality[airquality$Month == 6, 1], na.omit = TRUE)
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[airquality$Month == 6, 1])
boxplot(airquality[airquality$Month == 6, 1], na.omit = TRUE)
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[airquality$Month == 6, 1])
boxplot(airquality[airquality$Month == 6, 1], na.omit = TRUE)
6, 1])
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[airquality$Month == 6, 1])
# 2.2 Make a histogram of the early afternoon ozone concentration in June.
hist(airquality[airquality$Month == 6, 1])
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[airquality$Month == 6, 1])
?boxplot
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[airquality$Month == 6, 1])
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[airquality$Month == 6, 1])
# 2.2 Make a histogram of the early afternoon ozone concentration in June.
hist(airquality[airquality$Month == 6, 1])
# 2.2 Make a histogram of the early afternoon ozone concentration in June.
hist(airquality[airquality$Month == 6, 1],
x.lab = "Ozone Concentration")
?hist
# 2.2 Make a histogram of the early afternoon ozone concentration in June.
hist(airquality[airquality$Month == 6, 1],
axes = "Ozone Concentration")
?hist
# 2.2 Make a histogram of the early afternoon ozone concentration in June.
hist(airquality[airquality$Month == 6, 1],
breaks = "Ozone Concentration")
# 2.2 Make a histogram of the early afternoon ozone concentration in June.
hist(airquality[airquality$Month == 6, 1],
xlab = "Ozone Concentration")
?hist
# 2.2 Make a histogram of the early afternoon ozone concentration in June.
hist(airquality[airquality$Month == 6, 1],
main = "Histogram of the early afternoon ozone concentration in June",
xlab = "Ozone Concentration")
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[airquality$Month == 6, 1])
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[airquality$Month == 6, 1],
ylab = "Ozone Concentration")
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[airquality$Month == 6, 1],
main = "boxplot of the early afternoon ozone concentration in June",
ylab = "Ozone Concentration")
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
boxplot(airquality[airquality$Month == 6, 1],
main = "Boxplot of the early afternoon ozone concentration in June",
ylab = "Ozone Concentration")
# 2.4 Save the boxplot and histogram as .pdf files.
?pdf
# 2.4 Save the boxplot and histogram as .pdf files.
pdf('ozone_boxplot')
# 2.4 Save the boxplot and histogram as .pdf files.
pdf('ozone_boxplot', file = '~/Graphs')
# 2. The air quality dataset was introduced in Lecture 1. Import it into R. This
# and the subsequent tasks will do some analysis based on this dataset.
#
# 2.1 Make a boxplot of the early afternoon ozone concentration in June.
ozone_boxplot <- boxplot(airquality[airquality$Month == 6, 1],
main = "Boxplot of the early afternoon ozone concentration in June",
ylab = "Ozone Concentration")
plot(ozone_boxplot)
plot('ozone_boxplot')
library(ggplot2)
ggplot(airquality) + geom_boxplot(aes(airquality$Month == 6, 1))
ggplot(airquality) + geom_boxplot(aes(Month == 6, 1))
ggplot(airquality) + geom_boxplot(aes(Month == 6, Ozone))
ggplot(airquality) + geom_boxplot(aes(Month == 6, Ozone), na.rm = TRUE)
ggplot(airquality) + geom_boxplot(aes(Month == 6, Ozone, na.omit == TRUE))
ggplot(airquality) + geom_boxplot(aes(Month == 6, Ozone))
ggplot(airquality) + geom_boxplot(aes(Month == 6, !is.na(Ozone)))
ggplot(airquality) + geom_boxplot(aes(Month == 6, Ozone))
ggplot(!is.na(airquality)) + geom_boxplot(aes(Month == 6, Ozone))
ggplot(airquality) + geom_boxplot(aes(Month == 6, Ozone))
?geom_boxplot
?aes
ggplot(airquality) + geom_boxplot(aes([Month == 6, Ozone]))
ggplot(airquality) + geom_boxplot(aes(Month == 6, Ozone))
ggplot(airquality) + geom_boxplot(aes(Month == 6 && Ozone))
ggplot(airquality) + geom_boxplot(aes(Month == 6, Ozone))
ggplot(airquality) + geom_boxplot(aes(Month == 6))
ggplot(airquality) + geom_boxplot(aes(Ozone))
ggplot(airquality[airquality$month == 6,]) + geom_boxplot(aes(Ozone))
ggplot(airquality[airquality$Month == 6,]) + geom_boxplot(aes(Ozone))
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,]) + geom_boxplot(aes(Ozone))
?geon_boxplot
?geom_boxplot
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,]) +
geom_boxplot(aes(Ozone), show.legend = FALSE)
ozone_boxplot
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,]) +
geom_boxplot(aes(Ozone))
ozone_boxplot
?geom_boxplot
?ggplot
library(ggpairs)
# 2.4 Save the boxplot and histogram as .pdf files.
ggsave("Ozone_boxplot.pdf", ozone_boxplot, '~/Graphs')
# 2.4 Save the boxplot and histogram as .pdf files.
ggsave("Ozone_boxplot.pdf", ozone_boxplot, '../Graphs')
# 2.4 Save the boxplot and histogram as .pdf files.
library(GGally)
ggsave("Ozone_boxplot.pdf", ozone_boxplot, '../Graphs')
getwd()
ggsave("Ozone_boxplot.pdf", ozone_boxplot, '/Graphs')
ggsave("Ozone_boxplot.pdf", ozone_boxplot, 'Graphs')
ggsave("Ozone_boxplot.pdf", ozone_boxplot, path = 'Graphs')
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,]) +
geom_boxplot(aes(Ozone,
xlab = "Ozone Concentration"))
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,]) +
geom_boxplot(aes(Ozone,
x.lab = "Ozone Concentration"))
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,]) +
geom_boxplot(aes(Ozone,
xlab("Ozone Concentration")))
ozone_boxplot
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,]) +
geom_boxplot(aes(Ozone), xlab("Ozone Concentration"))
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,]) +
geom_boxplot(aes(Ozone), xlab = "Ozone Concentration")
geom_boxplot(aes(Ozone), xlab("Ozone Concentration")
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,]) +
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,]) +
geom_boxplot(aes(Ozone), xlab("Ozone Concentration"))
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,], xlab("Ozone Concentration")) +
geom_boxplot(aes(Ozone))
ozone_boxplot
help("geom_boxplot")
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,]) +
geom_boxplot(aes(Ozone)) +
labs(title = "Boxplot of the early afternoon ozone concentration in June",
xlab("Ozone Concentration"))
ozone_boxplot
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,]) +
geom_boxplot(aes(Ozone)) +
labs(title = "Boxplot of the early afternoon ozone concentration in June",
xlab ="Ozone Concentration")
ozone_boxplot
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,]) +
geom_boxplot(aes(Ozone)) +
labs(title = "Boxplot of the early afternoon ozone concentration in June",
x ="Ozone Concentration")
ozone_boxplot
ggsave("Ozone_boxplot.pdf", ozone_boxplot, path = 'Graphs')
ozone_histogram
ozone_histogram <- ggplot(airquality[airquality$Month == 6,]) +
geom_histogram(aes(Ozone)) +
labs(title = "Histogram of the ealy afternoon ozone concentration in June")
ozone_histogram
ozone_histogram <- ggplot(airquality[airquality$Month == 6,]) +
geom_histogram(aes(Ozone)) +
labs(title = "Histogram of the ealy afternoon ozone concentration in June",
x = "Ozone Concentration",
y = "Frequency")
ozone_histogram
ggsave("Ozone_histrogram.pdf", ozone_histogram, path = 'Graphs')
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,]) +
geom_boxplot(aes(Ozone)) +
labs(title = "Boxplot of the early afternoon ozone concentration in June",
x ="Ozone Concentration",
y = "")
ozone_boxplot
ozone_boxplot <- ggplot(airquality[airquality$Month == 6,]) +
geom_boxplot(aes(Ozone)) +
labs(title = "Boxplot of the early afternoon ozone concentration in June",
x ="Ozone Concentration")
ozone_boxplot
# 3. The ENV221 Students dataset was introduced in Lecture 2. Import it into R.
# This and the subsequent tasks will do some analysis based on this dataset.
#
# 3.1 Make a scatter plot for the weight against the height.
stud <- read.csv('/Data/students_env221.csv')
# 3. The ENV221 Students dataset was introduced in Lecture 2. Import it into R.
# This and the subsequent tasks will do some analysis based on this dataset.
#
# 3.1 Make a scatter plot for the weight against the height.
stud <- read.csv('Data/students_env221.csv')
library(plotly)
?plotyly
??plotyly
?plotly
stud
stud_weight_height_scatter <- ggplot(stud) +
geom_point(aes(x = HEIGHT, y = WEIGHT))
stud_weight_height_scatter
stud_weight_height_scatter <- ggplot(stud) +
geom_point(aes(x = HEIGHT, y = WEIGHT)) +
labs(title = "Relation between weight and height",
x = "Height/cm",
y = "Weight/kg")
stud_weight_height_scatter
stud_weight_height_scatter <- ggplot(stud) +
geom_point(aes(x = HEIGHT, y = WEIGHT)) +
labs(title = "Relation between weight and height",
x = "Height / cm",
y = "Weight / kg")
stud_weight_height_scatter
stud_weight_height_scatter <- ggplot(stud) +
geom_point(aes(x = HEIGHT, y = WEIGHT)) +
labs(title = "Relation between weight and height",
x = "Height /cm",
y = "Weight /kg")
stud_weight_height_scatter
stud_weight_height_scatter <- ggplot(stud) +
geom_point(aes(x = HEIGHT, y = WEIGHT)) +
geom_smooth(aes(x = HEIGHT, y = WEIGHT))
labs(title = "Relation between weight and height",
x = "Height /cm",
y = "Weight /kg")
stud_weight_height_scatter <- ggplot(stud) +
geom_point(aes(x = HEIGHT, y = WEIGHT)) +
geom_smooth(aes(x = HEIGHT, y = WEIGHT)) +
labs(title = "Relation between weight and height",
x = "Height /cm",
y = "Weight /kg")
stud_weight_height_scatter
stud_weight_height_scatter <- ggplot(stud, aes(x = HEIGHT, y = WEIGHT)) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = "Relation between weight and height",
x = "Height /cm",
y = "Weight /kg")
stud_weight_height_scatter
# Make a histogram of the BMI for the female and male students, respectively.
stud_new <- read.csv('Data/students_ENV221.csv')
stud_new
# Make a histogram of the BMI for the female and male students, respectively.
stud_new <- read.csv('Data/students_ENV221_new.csv')
stud_new
male_bmi <- ggplot(stud_new[stud_new$GENDER == Male,]) +
geom_histogram(aes(BMI))
male_bmi <- ggplot(stud_new[stud_new$GENDER == 'Male',]) +
geom_histogram(aes(BMI))
male_bmi
male_bmi <- ggplot(stud_new[stud_new$GENDER == 'Male',]) +
geom_histogram(aes(BMI)) +
labs(title = "BMI of male students",
y = "Frequency")
male_bmi
female_bmi <- ggplot(stud_new[stud_new$GENDER == 'Female',]) +
geom_histogram(aes(BMI)) +
labs(title = "BMI of female students",
y = "Frequency")
female_bmi
stat_bar <- ggplot(stud) +
geom_bar(aes(STAT))
stat_bar
stat_bar <- ggplot(stud) +
geom_bar(aes(STAT), na.rm = TRUE)
stat_bar
stat_bar <- ggplot(stud) +
geom_bar(aes(na.omit(STAT)))
stat_bar
stat_bar <- ggplot(stud) +
geom_bar(aes(na.omit(STAT), STAT))
stat_bar
stat_bar <- ggplot(stud) +
geom_bar(aes(STAT))
stat_bar
stat_bar <- ggplot(stud) +
geom_bar(aes(STAT)) +
labs(title = "Number of the students at different levels in Statistics",
x = "Knowledge Level",
y = "Frequency")
stat_bar
r_bar
r_bar <- ggplot(stud) +
geom_bar(aes(R)) +
labs(title = "Number of the students at different levels in R")
r_bar
# 3.4 Make a pair plot of all the numeric variables in the dataset.
ggpairs(stud_new)
# 3.4 Make a pair plot of all the numeric variables in the dataset.
ggpairs(stud_new, aes(color = GENDER, alpha = 0.5))
# 3.6 Save the graphs as .pdf files.
ggsave('stud_weight_height_scatter.pdf',
stud_weight_height_scatter,
path = 'Graphs')
?ggparis
?ggpairs
# 3.4 Make a pair plot of all the numeric variables in the dataset.
ggpairs(!stud_new[, c(1, 8, 9, 10, 11)])
# 3.4 Make a pair plot of all the numeric variables in the dataset.
ggpairs(stud_new[, c(2, 4, 5, 6, 7)])
# 3.4 Make a pair plot of all the numeric variables in the dataset.
ggpairs(stud_new[, c(4, 5, 6, 7)])
# 3.4 Make a pair plot of all the numeric variables in the dataset.
ggpairs(stud_new[, c(4, 5, 6, 7, 12)])
# 3.4 Make a pair plot of all the numeric variables in the dataset.
ggpairs(stud_new[, c(4, 5, 6, 7, 12)], aes(color = GENDER, alpha = 0.5))
# 3.4 Make a pair plot of all the numeric variables in the dataset.
ggpairs(stud_new[, c(4, 5, 6, 7, 12)], aes(colour = GENDER, alpha = 0.5))
# 3.4 Make a pair plot of all the numeric variables in the dataset.
ggpairs(stud_new[, c(4, 5, 6, 7, 12)], aes(colour = stud$GENDER, alpha = 0.5))
# 3.4 Make a pair plot of all the numeric variables in the dataset.
numeric_pairs <- ggpairs(stud_new[, c(4, 5, 6, 7, 12)], aes(colour = stud$GENDER, alpha = 0.5))
ggsabe('numeric_paris', numeric_pairs, path = 'Graphs')
ggsave('male_bmi.pdf', male_bmi, path = 'Graphs')
ggsave('female_bmi.pdf', female_bmi, path = 'Graphs')
ggsave('stat_bar.pdf', stat_bar, path = 'Graphs')
ggsave('r_bar.pdf', r_bar, path = 'Graphs')
ggsave('numeric_paris', numeric_pairs, path = 'Graphs')
ggsave('numeric_paris.pdf', numeric_pairs, path = 'Graphs')
warnings()
# 3.3 Make a bar plot of the number of the students at different levels in
# Statistics and R.
stat_bar <- ggplot(stud) +
geom_bar(aes(STAT)) +
labs(title = "Number of the students at different levels in Statistics",
x = "Knowledge Level",
y = "Frequency")
stat_bar
?plot()
?base::plot()
?pairs()
?symboles()
?symbols()
?hist()
?curve()
?barplot()
?boxplot()
/coplot()
?coplot()
?dotchart()
?stripchart()
?image()
?contour()
ozone_histogram <- ggplot(airquality[airquality$Month == 6,]) +
geom_histogram(aes(Ozone)) +
labs(title = "Histogram of the ealy afternoon ozone concentration in June",
x = "Ozone Concentration",
y = "Frequency")
ozone_histogram
# 2.2 Make a histogram of the early afternoon ozone concentration in June.
hist(airquality[airquality$Month == 6, 1],
main = "Histogram of the early afternoon ozone concentration in June",
xlab = "Ozone Concentration")
extract_help("base", "plot", "html")
plot(trees$Height)
plot(trees$Height, pch = 17)
#
hist(trees$Height)
library(ggplot2)
ggplot(trees) +
geom_point(aes(x = Height, y = Volume, color = "blue"))
ggplot(trees) +
geom_point(aes(x = Height, y = Volume), color = "blue")
#
?ggsave
ggsave("output.pdf", width = 10, height = 6, units = "in")
trees
ggsave("output.pdf", width = 10, height = 6, units = "in", path = "Graphs")
?ggave
# 4.6 （Continued) Save the data frame as a .csv file.
write.csv(stud, "students_ENV221_new.csv", row.names = FALSE, path = 'Data')
# 4.6 （Continued) Save the data frame as a .csv file.
write.csv(stud, "Data/students_ENV221_new.csv", row.names = FALSE)
# 3.6 (Continued) Save the frame as a .csv file.
write.csv(df_aq, "Data/airquality_new.csv", row.names = FALSE)
# The air quality dataset was introduced in Week1. Download it from LMO and
# import it into R. This and the subsequent tasks will do some analysis based on
# this dataset.
#
# 3.1 How many rows and columns does this data frame have?
df_aq <- read.csv("airquality.csv")
# The air quality dataset was introduced in Week1. Download it from LMO and
# import it into R. This and the subsequent tasks will do some analysis based on
# this dataset.
#
# 3.1 How many rows and columns does this data frame have?
df_aq <- read.csv("Data/airquality.csv")
# 3.5 (Continued) The temperature in the dataset was given in F. Add a new column
# for the temperature in C.
Celsius <- round((df_aq$Temp - 32) / 1.8)
df_aq$Celsius <- Celsius
# 3.6 (Continued) Save the frame as a .csv file.
write.csv(df_aq, "Data/airquality_new.csv", row.names = FALSE)
setosa <- data.frame()
versicolor <- data.frame()
virginica <- data.frame()
for(i in 1:nrow(iris)){
if(iris$Species[i] == 'setosa'){
setosa <- rbind(setosa, iris[i,])
} else if(iris$Species[i] == 'versicolor'){
versicolor <- rbind(versicolor, iris[i,])
} else if(iris$Species[i] == 'virginica'){
virginica <- rbind(virginica, iris[i,])
}
if(i == nrow(iris)){
write.csv(setosa, 'Data/setosa.csv', row.names = FALSE)
write.csv(versicolor, 'Data/versicolor.csv', row.names = FALSE)
write.csv(virginica, 'Data/virginica.csv', row.names = FALSE)
}
}
