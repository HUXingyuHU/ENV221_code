airquality <- read.csv("D:\Desktop\ENV211\data\airquality.csv")
airquality <- read.csv("D:/Desktop/ENV211/data/airquality.csv")
airquality <- read.csv("D:\Desktop\ENV211\data\airquality.csv")
airquality <- read.csv("airquality.csv")
airquality <- read.csv(file = "D:\Desktop\ENV211\data\airquality.csv")
airquality <- read.csv(file = "D:/Desktop/ENV211/data/airquality.csv")
airquality <- read.csv(file = "D:/Desktop/ENV221/data/airquality.csv")
airquality <- read.csv(file = "airquality.csv")
airquality
summary(aitquality)
summary(airquality)
1 + 2 - 4 * 5 / 6 ^ 2
1 + (2 - 4 * (5 / 6)) ^ 2
2 ^ 0.5
7 %/% 3
7 %% 3
?`%/%`
?`%/%`
round(3.1421312, 10)
round(3.123, 3)
round(3.123, 4)
round(3, 3)
round(3.1, 3.1)
round(3, 3.123)
1:9 -> x
x
x <- 1:9
x
assign('x', 1:9)
x
assign('y' <- 'x', 1:9)
y
x
assign('y' <- x, 1:9)
?assign
x
x[7]
x[0]
sqrt(x)
mean()
mean(x)
range(x)
sd(x)
log10(x)
median.default(x)
x[x]
x <- c(29, 28, 28, NA, 30)
mean(x)
mean(x, rm.na=true)
mean(x, na.rm=true)
mean(x, na.rm=TRUE)
mean(x, na.rm=F)
df_manual <- data.frame(age = c(21, 31, 23, 40, 36),
gender = c('f', 'm', 'm', 'f', 'f'))
df_manual
View(df_manual)
View(df_manual)
df_manual <- data.frame(age = c(21, 31, 23, 40, 36),
gender = c("f", 'm', 'm', 'f', 'f'))
df_manual
df_manual <- data.frame(age = c(21, 31, 23, 40, '36'),
gender = c("f", 'm', 'm', 'f', 'f'))
df_manual
mean(df_manial[1:5,])
mean(df_manual[1:5,])
mean(df_manual$age)
df_manual <- data.frame(age = c(21, 31, 23, 40, 36),
gender = c("f", 'm', 'm', 'f', 'f'))
mean(df_manual$age)
df_manual$age - 2
2022 - df_manual$age
mean(df_manual)
sd(df_manual)
df_manual$age - 2
2022 - df_manual$age
mean(df_manual)
sd(df_manual)
df_manual$age - 2
2022 - df_manual$age
mean(df_manual$age)
sd(df_manual$age)
round(sd(df_manual$age), 2)
summary(df_manual)
names(df_manual) <- c('x', 'y')
df_manual
names(df_manual) <- c('age', 'gender')
df_manual
df_aq <- read.csv('airquality.csv')
df_aq
summary(df_aq)
x <- df_aq
x
summary(x)
data()
iris
names(iris)
data(iris)
ToothGrowth
plot(ToothGrowth)
# 1. calculate 1+2+3+...+100
sum(1:100)
exp_y <- function(a, b, x) {
exp(ax)+b
}
exp_y(3.2, 98, 0.2)
exp_y <- function(a, b, x) {
exp(a * x) + b
}
exp_y(3.2, 98, 0.2)
exp_y(3.2, 98, 2)
exp_y(3.2, 98, 20)
exp_y(3.2, 98, 200)
# 3. The air quality dataset was introduced in Week1. Download it from LMO and
# import it into R. This and the subsequent tasks will do some analysis based on
# this dataset.
#
# How many rows and columns does this data frame have?
df_aq <- read.csv("airquality.csv")
summary(df_aq)
str(df_aq)
len(df_aq)
cat("Numbers of rows: ", nrow(df_aq))
cat("Numbers of columns: ", ncol(df_aq))
cat("Numbers of rows: ", nrow(df_aq))
cat("Numbers of columns: ", ncol(df_aq))
# (Continued) What was the temperature on June 22?
summary(df_aq)
# (Continued) What was the temperature on June 22?
view(df_aq)
# (Continued) What was the temperature on June 22?
show(df_aq)
# (Continued) What was the temperature on June 22?
df_aq
# (Continued) What was the temperature on June 22?
df_aq$Temp[Month=6, Day=22]
# (Continued) What was the temperature on June 22?
df_aq$Temp["Month"=6, "Day"=22]
# (Continued) What was the temperature on June 22?
df_aq$Temp
# (Continued) What was the temperature on June 22?
df_aq['Temp', 6, 22]
# (Continued) What was the temperature on June 22?
df_aq$Month[6]$Day[22]
# 3. The air quality dataset was introduced in Week1. Download it from LMO and
# import it into R. This and the subsequent tasks will do some analysis based on
# this dataset.
#
# How many rows and columns does this data frame have?
df_aq <- dataframe(read.csv("airquality.csv"))
# 3. The air quality dataset was introduced in Week1. Download it from LMO and
# import it into R. This and the subsequent tasks will do some analysis based on
# this dataset.
#
# How many rows and columns does this data frame have?
df_aq <- data.frame(read.csv("airquality.csv"))
cat("Numbers of rows: ", nrow(df_aq))
cat("Numbers of columns: ", ncol(df_aq))
df_aq <- data.frame(read.csv("airquality.csv"))
cat("Numbers of rows: ", nrow(df_aq))
cat("Numbers of columns: ", ncol(df_aq))
# (Continued) What was the temperature on June 22?
df_aq$Month[6]$Day[22]
str(df_aq)
# 3. The air quality dataset was introduced in Week1. Download it from LMO and
# import it into R. This and the subsequent tasks will do some analysis based on
# this dataset.
#
# How many rows and columns does this data frame have?
df_aq <- read.csv("airquality.csv")
str(df_aq)
str(df_aq)
# (Continued) What was the temperature on June 22?
df_aq[df_aq$Month=6, df_aq$Day=22]
# (Continued) What was the temperature on June 22?
df_aq[df_aq$Month==6, df_aq$Day==22]
df_aq
cat("Numbers of columns: ", ncol(df_aq))
colSums(de_aq)
cat("Numbers of columns: ", ncol(df_aq))
colSums(df_aq)
# (Continued) What was the temperature on June 22?
df_aq[df_aq$Month==6, df_aq$Day==22]
# (Continued) What was the temperature on June 22?
df_aq[,df_aq$Month==6, df_aq$Day==22]
# (Continued) What was the temperature on June 22?
df_aq[,c(df_aq$Month==6, df_aq$Day==22)]
# (Continued) What was the temperature on June 22?
df_aq[,c(Month==6, Day==22)]
# (Continued) What was the temperature on June 22?
df_aq[,c('Month'==6, 'Day'==22)]
# (Continued) What was the temperature on June 22?
df_aq[,c('Month'==6, 'Day'==22)]
# (Continued) What was the temperature on June 22?
df_aq[,c('Month'=6, 'Day'=22)]
# (Continued) What was the temperature on June 22?
df_aq[c('Month'=6, 'Day'=22),]
# (Continued) What was the temperature on June 22?
df_aq$Temp[c('Month'=6, 'Day'=22),]
# (Continued) What was the temperature on June 22?
df_aq[,c('Month'=6, 'Day'=22)]
# (Continued) What was the temperature on June 22?
df_aq[,c(Month=6, Day=22)]
# (Continued) What was the temperature on June 22?
df_aq[,c(df_aq$Month=6, df_aqDay=22)]
# (Continued) What was the temperature on June 22?
df_aq[,c(df_aq$Month=6, df_aq$Day=22)]
# (Continued) What was the temperature on June 22?
df_aq[,c(df_aq$Month==6, df_aq$Day==22)]
# 3. The air quality dataset was introduced in Week1. Download it from LMO and
# import it into R. This and the subsequent tasks will do some analysis based on
# this dataset.
#
# How many rows and columns does this data frame have?
df_aq <- read.csv("airquality.csv")
# (Continued) What was the temperature on June 22?
df_aq[,c(df_aq$Month==6, df_aq$Day==22)]
dim(df_aq)
# (Continued) What was the temperature on June 22?
df_aq[,c(df_aq$Month=6, df_aq$Day=22)]
subset(data, Month==6 & Day==22, select=c('Temp', 'Month', 'Day'))
subset(data, Month=='6' & Day==22, select=c('Temp', 'Month', 'Day'))
df_aq
# (Continued) What was the temperature on June 22?
df_aq[,c(df_aq$Month=6, df_aq$Day=22)]
# (Continued) What was the temperature on June 22?
df_aq[,c(df_aq$Month==6, df_aq$Day==22)]
# (Continued) What was the temperature on June 22?
df_aq[df_aq$Temp,c(df_aq$Month==6, df_aq$Day==22)]
# (Continued) What was the temperature on June 22?
df_aq[Temp,c(df_aq$Month==6, df_aq$Day==22)]
# (Continued) What was the temperature on June 22?
df_aq['Temp',c(df_aq$Month==6, df_aq$Day==22)]
# (Continued) What was the temperature on June 22?
df_aq[, df_aq$Temp]
# (Continued) What was the temperature on June 22?
df_aq[, df_aq$Temp]
# (Continued) What was the temperature on June 22?
df_aq[, Temp]
# (Continued) What was the temperature on June 22?
df_aq[, 'Temp']
# (Continued) What was the temperature on June 22?
df_aq[c('Month'==6, 'Day'=22), 'Temp']
# (Continued) What was the temperature on June 22?
df_aq[c('Month'==6, 'Day'==22), 'Temp']
# (Continued) What was the temperature on June 22?
df_aq[c('Month'=6, 'Day'=22), 'Temp']
# (Continued) What was the temperature on June 22?
df_aq['Month'=6 && 'Day'=22, 'Temp']
# (Continued) What was the temperature on June 22?
df_aq['Month'=6 & 'Day'=22, 'Temp']
# (Continued) What was the temperature on June 22?
df_aq[c('Month'=6, 'Day'=22), 'Temp']
# (Continued) What was the temperature on June 22?
df_aq[c(df_aq$Month=6, df_aq$Day=22), 'Temp']
# (Continued) What was the temperature on June 22?
df_aq[c(df_aq$Month==6, df_aq$Day==22), 'Temp']
# (Continued) What was the temperature on June 22?
df_aq[c(df_aq$Month==6 && df_aq$Day==22), 'Temp']
# (Continued) What was the temperature on June 22?
df_aq[df_aq$Month==6 && df_aq$Day==22, 'Temp']
# (Continued) What was the temperature on June 22?
df_aq[c(df_aq$Month=6, df_aq$Day=22), 'Temp']
# (Continued) What was the temperature on June 22?
df_aq[c(df_aq$Month==6, df_aq$Day==22), 'Temp']
# (Continued) What was the temperature on June 22?
df_aq[df_aq$Month==6, 'Temp']
# (Continued) What was the temperature on June 22?
df_aq[with(df_aq, Month==6 & Day==22), 'Temp']
# (Continued) What was the temperature on June 22?
cat("The temperature is: ", df_aq[with(df_aq, Month==6 & Day==22), 'Temp'])
# (Continued) What was the mean early afternoon ozone concentration (ppb) in June?
mean(df_aq[, Ozone])
# (Continued) What was the mean early afternoon ozone concentration (ppb) in June?
mean(df_aq[, "Ozone"])
# (Continued) What was the mean early afternoon ozone concentration (ppb) in June?
mean(df_aq[df_aq$Month=6, "Ozone"])
# (Continued) What was the mean early afternoon ozone concentration (ppb) in June?
mean(df_aq[df_aq$Month==6, "Ozone"])
# (Continued) What was the mean early afternoon ozone concentration (ppb) in June?
mean(df_aq[df_aq$Month==6, "Ozone"], na.rm=T)
cat("Mean = ", mean(df_aq$Wind))
cat("Maximum = ", max(df_aq$Wind))
cat("Minimum = ", min(df_aq$Wind))
cat("Median = ", median(df_aq$Wind))
# 3.5 (Continued) The temperature in the dataset was given in F. Add a new column
# for the temperature in C.
Celsius <- (df_aq$Temp - 32) / 1.8
df_aq$Celsius <- Celsius
df_aq
Celsius <- round((df_aq$Temp - 32) / 1.8)
df_aq$Celsius <- Celsius
df_aq
# 3.6 (Continued) Save the frame as a .csv file.
write.csv(df_aq, "airquality_new.csv")
# The ENV211 Students dataset was introduced in Week 1. Download it from LMO and
# import it into R. This and the subsequent tasks will do some analysis based on
# this dataset.
#
# 4.1 How many rows and columns does this data frame have?
student <- read.csv("students_env221.csv")
student
# The ENV211 Students dataset was introduced in Week 1. Download it from LMO and
# import it into R. This and the subsequent tasks will do some analysis based on
# this dataset.
#
# 4.1 How many rows and columns does this data frame have?
stud <- read.csv("students_env221.csv")
cat("Numbers of rows: ", nrowl(stud))
cat("Numbers of rows: ", nrow(stud))
cat("Numbers of columns: ", ncol(stud))
# 4.1 (Continued) What is the hometown of the student No. 16?
stud[stud$ID==16, "HOME"]
# 4.2 (Continued) What is the mean height of male and female students, respectively?
cat("Average height of male student: ", mean(stud[stud$GENDER==Male, "HEIGHT"]))
# 4.2 (Continued) What is the mean height of male and female students, respectively?
cat("Average height of male student: ", mean(stud[stud$GENDER=="Male", "HEIGHT"]))
cat("Average height of female student: ", mean(stud[stud$GENDER=="Female", "HEIGHT"]))
cat("Mean = ", mean())
cat("Mean = ", mean(stud$SHOE))
cat("Maximum = ", max(stud$SHOE))
cat("Minimum = ", min(stud$SHOE))
cat("Median = ", median(stud$SHOE))
cat(sum(stud$STAT=="1. I know nothing about it.",
" and ",
sum(stud$R=="1. I know nothing about it."),
" students kenw nothing about statistics and R, respectively.")
cat(sum(stud$STAT=="1. I know nothing about it."),
" and ",
sum(stud$R=="1. I know nothing about it."),
" students kenw nothing about statistics and R, respectively.")
cat(sum(stud$STAT=="1. I know nothing about it.", na.rm=TRUE),
" and ",
sum(stud$R=="1. I know nothing about it.", na.rm=TRUE),
" students kenw nothing about statistics and R, respectively.")
# 4.5 (Continued) Body mass index (BMI) is a measure of body fat based on height
# and weight that applies to adult men and women. Add a new column as the BMI.
BMI <- stud$WEIGHT / (stud$HEIGHT / 100) ^ 2
BMI
stud$BMI <- BMI
stud
# 4.6 （Continued) Save the data frame as a .csv file.
write.csv(stud, "students_ENV221_new.csv")
BMI <- round(stud$WEIGHT / (stud$HEIGHT / 100) ^ 2, 1)
stud$BMI <- BMI
# 4.6 （Continued) Save the data frame as a .csv file.
write.csv(stud, "students_ENV221_new.csv")
iris
summary(iris)
example(qplot)
library(ggplot2)
example(qplot)
# 3.3 (Continued) What was the mean early afternoon ozone concentration (ppb) in June?
mean(df_aq[df_aq$Month==6, "Ozone"], na.rm=TRUE)
# 3.2 (Continued) What was the temperature on June 22?
cat("The temperature is: ", df_aq[with(df_aq, Month==6 && Day==22), 'Temp'])
# 3.2 (Continued) What was the temperature on June 22?
cat("The temperature is: ", df_aq[with(df_aq, Month==6 & Day==22), 'Temp'])
df_aq
exp_y <- function(a, b, x) {
exp(a * x) + b
}
exp_y(3.2, 98, 0.2)
exp_y(3.2, 98, 2)
exp_y(3.2, 98, 20)
exp_y(3.2, 98, 200)
summary(df_aq)
summary(df_aq$Wind)
(x, 29)
assign('x', 29)
x
# 2.
eul <- exp(1)
eul
# 3.
df_tree <- trees
names(df_tree[2])
df_tree
# 4.
min(df_tree)
# 4.
apply(df_tree, min)
# 4.
apply(df_tree, 1, min)
# 4.
apply(df_tree, 2, min)
pi
exp(1)
name(trees[2])
names(trees[2])
names(trees)[2]
summary(stud$SHOE)
dim(stud)
tapply(stud$HEIGHT, stud$GENDER, mean)
# 4.4 (Continued) How many students knew nothing about statistics? How about R?
cat(sum(stud$STAT=="1. I know nothing about it.", na.rm=TRUE),
" and ",
sum(stud$R=="1. I know nothing about it.", na.rm=TRUE),
" students kenw nothing about statistics and R, respectively.")
1:10
1:10
1:10
1:10
1:10
source("~/.active-rstudio-document", echo=TRUE)
1+3
1:10
1+2
1+3
1:10
1+2
1+3
1:10
y <- 1:3
y[TRUE]
y[FALSE]
y[c(TRUE, FALSE)]
y <- 1:4
y[c(TRUE, FALSE)]
y[c(TRUE, TRUE)]
y[c(TRUE, FALSE)]
y[c(FALSE, FALSE)]
y[c(FALSE, TRUE)]
y[FALSE]
TRUE - TRUE
TRUE - TRUE ^ 2
(TRUE + TRUE) ^ 2
y <- 1:5
y[TRUE]
y[FALSE]
y[c(FALSE, TRUE)]
y[c(TRUE, TRUE, TRUE)]
y[c(TRUE, TRUE, FALSE)]
y[c(TRUE, FALSE, FALSE)]
hour <- 12
if( hour == 12 ) {
print('Go!')
y <- 1
}
y
hour <- 12
if( hour == 12 ) {
print('Go!')
x <- 1
}
x
ifelse(y > 2, 'large', 'small')
y
ifelse(y > 2, 'large', y <- 'small')
y
z <- "small"
repeat print(1)
convert_windspeed <- function(x){
x * 1.609344 * 1000 / 3600
return(x)
}
convert_windspeed(100)
convert_windspeed <- function(x){
x * 1.609344 * 1000 / 3600
#  return(x)
}
convert_windspeed(100)
convert_windspeed <- function(x){
y <- x * 1.609344 * 1000 / 3600
return(y)
}
convert_windspeed(100)
convert_windspeed <- function(x){
y <- x * 1.609344 * 1000 / 3600
#    return(y)
}
convert_windspeed(100)
a <- convert_windspeed(100)
a
a <- c(1, 2, 3, NA)
mean(a, TRUE)
mean(a, FALSE)
mean(a, na.rm=FALSE)
mean(a, na.rm=TRUE)
.libPaths("ggplot2")
.libPaths()
demo(plotrix)
install.packages("plotrix")
library(plotrix)
library("plotrix")
?plotrix
